name: Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'ui/**', 'api/**', 'agent/**', 'scorer/**', 'graph/**', 'tests/integration/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'ui/**', 'api/**', 'agent/**', 'scorer/**', 'graph/**', 'tests/integration/**' ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:5.15
        env:
          NEO4J_AUTH: neo4j/password
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "cypher-shell -u neo4j -p password 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        pip install -r requirements-staging.txt
        
    - name: Install frontend dependencies
      run: |
        cd ui
        npm ci
        
    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
        echo "NEO4J_URI=bolt://localhost:7687" >> $GITHUB_ENV
        echo "NEO4J_USERNAME=neo4j" >> $GITHUB_ENV
        echo "NEO4J_PASSWORD=password" >> $GITHUB_ENV
        echo "MLFLOW_TRACKING_URI=sqlite:///mlflow.db" >> $GITHUB_ENV
        echo "OPTUNA_STORAGE=sqlite:///optuna.db" >> $GITHUB_ENV
        
    - name: Wait for Neo4j to be ready
      run: |
        timeout 60 bash -c 'until cypher-shell -u neo4j -p password "RETURN 1" > /dev/null 2>&1; do sleep 2; done'
        
    - name: Load test data
      run: |
        python data/generate_synthetic_data.py
        python graph/load_data.py
        
    - name: Build frontend
      run: |
        cd ui
        npm run build
        
    - name: Start backend API
      run: |
        python api/main.py &
        sleep 10
        
    - name: Start frontend server
      run: |
        cd ui
        npx serve -s build -l 3000 &
        sleep 5
        
    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v --tb=short
        
    - name: Run end-to-end tests
      run: |
        # Test API health
        curl -f http://localhost:8000/health || exit 1
        
        # Test frontend health
        curl -f http://localhost:3000 || exit 1
        
        # Test API endpoints
        curl -f -X POST http://localhost:8000/api/v1/paths \
          -H "Content-Type: application/json" \
          -d '{"target_asset": "crown-jewel-db-001", "algorithm": "hybrid"}' || exit 1
        
        # Test AI query endpoint
        curl -f -X POST http://localhost:8000/api/v1/query \
          -H "Content-Type: application/json" \
          -d '{"query": "What are the riskiest attack paths?"}' || exit 1
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: |
          test-results/
          coverage.xml
        retention-days: 7

  smoke-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install -r requirements-staging.txt
        cd ui && npm ci
        
    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
        echo "NEO4J_URI=bolt://localhost:7687" >> $GITHUB_ENV
        echo "NEO4J_USERNAME=neo4j" >> $GITHUB_ENV
        echo "NEO4J_PASSWORD=password" >> $GITHUB_ENV
        
    - name: Run smoke tests
      run: |
        # Test API startup
        python tests/test_api.py &
        sleep 5
        
        # Test basic functionality
        curl -f http://localhost:8000/health || exit 1
        curl -f http://localhost:8000/api/v1/crown-jewels || exit 1
        
        # Test frontend build
        cd ui
        npm run build
        
        echo "Smoke tests passed!"

  api-contract-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install -r requirements-staging.txt
        pip install schemathesis
        
    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
        echo "NEO4J_URI=bolt://localhost:7687" >> $GITHUB_ENV
        echo "NEO4J_USERNAME=neo4j" >> $GITHUB_ENV
        echo "NEO4J_PASSWORD=password" >> $GITHUB_ENV
        
    - name: Start API
      run: |
        python tests/test_api.py &
        sleep 10
        
    - name: Run API contract tests
      run: |
        schemathesis run http://localhost:8000/openapi.json --checks all --max-failures=5
        
    - name: Upload contract test results
      uses: actions/upload-artifact@v4
      with:
        name: api-contract-test-results
        path: schemathesis-report.html
        retention-days: 7
