name: Frontend CI

on:
  push:
    branches: [ main, develop, feature/* ]
    paths: [ 'ui/**', 'package.json', 'package-lock.json' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'ui/**', 'package.json', 'package-lock.json' ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Install dependencies
      run: |
        cd ui
        npm ci
        
    - name: Run ESLint
      run: |
        cd ui
        npm run lint
        
    - name: Run TypeScript check
      run: |
        cd ui
        npx tsc --noEmit --skipLibCheck
        
    - name: Run unit tests
      run: |
        cd ui
        npm run test:coverage
        
    - name: Build application
      run: |
        cd ui
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: ui/build/
        retention-days: 7
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-results-${{ matrix.node-version }}
        path: ui/coverage/
        retention-days: 7

  frontend-accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Install dependencies
      run: |
        cd ui
        npm ci
        
    - name: Build application
      run: |
        cd ui
        npm run build
        
    - name: Run accessibility tests
      run: |
        cd ui
        npx @axe-core/cli build/index.html --exit
        
    - name: Run Lighthouse CI
      run: |
        cd ui
        npx @lhci/cli@0.12.x autorun --upload.target=temporary-public-storage --collect.url=http://localhost:3000

  frontend-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
        
    - name: Install dependencies
      run: |
        cd ui
        npm ci
        
    - name: Run npm audit
      run: |
        cd ui
        npm audit --audit-level=moderate
        
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
