name: Feature Development Workflow

on:
  push:
    branches: [ feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  feature-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup GitHub CLI
      run: |
        echo "Setting up GitHub CLI..."
        # GitHub CLI is pre-installed on ubuntu-latest runners
      
    - name: Detect changes
      id: changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -E '^ui/' > /dev/null; then
          echo "frontend_changed=true" >> $GITHUB_OUTPUT
        fi
        if git diff --name-only HEAD~1 HEAD | grep -E '^(api/|agent/|scorer/|graph/|data/|tests/)' > /dev/null; then
          echo "backend_changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Validate changes
      if: steps.changes.outputs.frontend_changed == 'true' || steps.changes.outputs.backend_changed == 'true'
      run: |
        echo "Changes detected - frontend: ${{ steps.changes.outputs.frontend_changed }}, backend: ${{ steps.changes.outputs.backend_changed }}"
        echo "Skipping workflow triggering to avoid circular dependencies"
        echo "Individual workflows will run automatically based on their triggers"

  # Security scanning is handled by the dedicated security.yml workflow
  # which runs automatically on pushes to feature branches

  build-and-deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build frontend
      run: |
        echo "Building frontend for preview deployment..."
        # This would build and deploy to a preview environment
        echo "Preview deployment completed"
        
    - name: Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Preview deployment ready! Check out your changes at: [Preview Link](https://preview.example.com)'
          })
