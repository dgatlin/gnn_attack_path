version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.15-community
    container_name: gnn-demo-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - gnn-demo-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: ..
      dockerfile: ops/Dockerfile.api
    container_name: gnn-demo-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - PYTHONPATH=/app
    volumes:
      - ../data:/app/data:ro
      - ../models:/app/models:ro
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - gnn-demo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # React Frontend
  ui:
    build:
      context: ../ui
      dockerfile: ../ops/Dockerfile.ui
    container_name: gnn-demo-ui
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api
    networks:
      - gnn-demo-network
    restart: unless-stopped

  # Data Loader (runs once)
  data-loader:
    build:
      context: ..
      dockerfile: ops/Dockerfile.data-loader
    container_name: gnn-demo-data-loader
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ../data:/app/data:ro
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - gnn-demo-network
    command: ["python", "graph/load_data.py"]
    restart: "no"

  # Synthetic Data Generator (runs once)
  data-generator:
    build:
      context: ..
      dockerfile: ops/Dockerfile.data-generator
    container_name: gnn-demo-data-generator
    volumes:
      - ../data:/app/data
    networks:
      - gnn-demo-network
    command: ["python", "data/generate_synthetic_data.py"]
    restart: "no"

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  gnn-demo-network:
    driver: bridge
